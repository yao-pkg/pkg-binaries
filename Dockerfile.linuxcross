FROM ubuntu:focal AS build

USER root:root
WORKDIR /root/pkg-fetch/
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update
RUN apt-get install -y curl software-properties-common ca-certificates gnupg

# Install Node.js 20
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - && \
    apt-get install -y nodejs

# Add Ubuntu toolchain repository and install build tools
RUN add-apt-repository ppa:ubuntu-toolchain-r/test -y && \
    apt-get update && \
    apt-get install -y binutils g++-10 git make patch python3 python3-distutils

# Setting ARM architecture toolchain
# Note: For ARMv7, we need to use arm-linux-gnueabihf as the toolchain
ARG TARGET_PLATFORM=armv7
ARG TARGET_TOOLCHAIN_ARCH=arm-linux-gnueabihf

# Install cross-compilation toolchain without version specifier
RUN apt-get update && \
    apt-get install -y binutils-${TARGET_TOOLCHAIN_ARCH} gcc-${TARGET_TOOLCHAIN_ARCH} g++-${TARGET_TOOLCHAIN_ARCH}

# Create a wrapper for arm-linux-gnueabihf-g++
RUN mv /usr/bin/arm-linux-gnueabihf-g++ /usr/bin/arm-linux-gnueabihf-g++.real && \
    echo '#!/bin/bash' > /usr/bin/arm-linux-gnueabihf-g++ && \
    echo 'args=()' >> /usr/bin/arm-linux-gnueabihf-g++ && \
    echo 'for arg in "$@"; do' >> /usr/bin/arm-linux-gnueabihf-g++ && \
    echo '  if [ "$arg" = "-std=gnu++20" ]; then args+=("-std=gnu++2a"); else args+=("$arg"); fi' >> /usr/bin/arm-linux-gnueabihf-g++ && \
    echo 'done' >> /usr/bin/arm-linux-gnueabihf-g++ && \
    echo 'exec /usr/bin/arm-linux-gnueabihf-g++.real "${args[@]}"' >> /usr/bin/arm-linux-gnueabihf-g++ && \
    chmod +x /usr/bin/arm-linux-gnueabihf-g++

# Set environment variables for cross-compilation (without version suffix)
ENV CC=${TARGET_TOOLCHAIN_ARCH}-gcc
ENV CXX=${TARGET_TOOLCHAIN_ARCH}-g++
ENV AR=${TARGET_TOOLCHAIN_ARCH}-ar
ENV NM=${TARGET_TOOLCHAIN_ARCH}-nm
ENV RANLIB=${TARGET_TOOLCHAIN_ARCH}-ranlib
ENV READELF=${TARGET_TOOLCHAIN_ARCH}-readelf
ENV STRIP=${TARGET_TOOLCHAIN_ARCH}-strip
ENV CC_host=gcc-10
ENV CXX_host=g++-10
ENV AR_host=ar
ENV NM_host=nm
ENV RANLIB_host=ranlib
ENV READELF_host=readelf

# Add these environment variables
ENV CFLAGS=-std=gnu++2a
ENV CFLAGS_host=-std=gnu++2a
ENV CXXFLAGS=-std=gnu++2a
ENV CXXFLAGS_host=-std=gnu++2a

# Debug: verify cross compiler exists
RUN ${CC} --version || echo "CC not found" && \
    ${CXX} --version || echo "CXX not found" && \
    ${STRIP} --version || echo "STRIP not found"

ARG PKG_FETCH_OPTION_a=armv7
ARG PKG_FETCH_OPTION_n

RUN mkdir -p dist && npx @yao-pkg/pkg-fetch --arch $PKG_FETCH_OPTION_a --node-range $PKG_FETCH_OPTION_n --output dist

FROM scratch
COPY --from=build /root/pkg-fetch/dist /
